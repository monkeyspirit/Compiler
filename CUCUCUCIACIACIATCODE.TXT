#include "tcode.h"
#include "semantic.h"
#include "counter.h"

#include <stdarg.h>

char **buffer=NULL;
int currentBufferSize=0;
FILE *out;

PLine wholeSymbolTable;

void tCodeGenerator(PLine pLine, Pnode pNode);

// metodi per gestire il buffer

void bufferWrite(char *lineToWrite){
    buffer = realloc(buffer, sizeof(char*) * (currentBufferSize+1)); // rialloco la memoria
    buffer[currentBufferSize++] = lineToWrite; // aggiungo la rica
}

void bprintf(char *s, ...){
    char *ss = malloc(strlen(s)); // devo allocare la memoria per la nuova stringa
    va_list args;
    va_start(args, s);
    vsprintf(ss, s, args); // elaboriamo la stringa
    bufferWrite(ss); // la aggiungiamo al buffer
    va_end(args);
}

void flush(){
    out = fopen("../tCode.out", "w");
    for (int i = 0; i < currentBufferSize; ++i)
        fprintf(out, "%s\n", buffer[i]);
    fclose(out);
}