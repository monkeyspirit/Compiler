module H (p1: int, p2: string): bool
    var p, y, z: int; xx: real;
    veroofalso: bool;
    const MAX:int = -4; a,b: bool = not true; RR: char = 'a';

    module f1(t: int, p:bool):bool
        var c:int;
        k,l:bool;
    begin f1
        return k;
    end f1

begin H

    #p = (z * (z + p) - (y * y) );
    #p1 = z -  z;
    #p = 8;
    if a then
        p=z;
        veroofalso =  a and f1(z,a);
        if a then
            p=8;
        end;
    else
        p=8;
        p=8;
        veroofalso =  a and f1(z,a);
    end;

    while (a) do
        p=8;
        veroofalso =  a and f1(z,a);
    end;
    #p = int (xx);
    #veroofalso = a;
    #veroofalso =  a and f1(z,a);
    return f1(z,a);

end H
